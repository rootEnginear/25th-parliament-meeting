---
import Layout from '../layouts/Layout.astro';
import data from '../data/all_parsed.json'
---

<Layout>
	<div class="instruction">
		<span class="instruction-text">
			<span class="b">วิธีการใช้:</span> กด <kbd>CTRL+F</kbd> แล้วหาคำที่ต้องการ หรือใช้กล่องทางขวา — ไม่ควรใช้
			Scrollbar
		</span>
		<span>กล่องค้นหาละเอียด <button onclick="showInstruction()">วิธีใช้</button></span>
		<div class="search-container">
			<input id="search-input" type="text" placeholder="ไม่ไว้วางใจ +ประยุทธ์ -ประวิทย์" />
			<button id="search-btn" type="button" >Loading...</button>
		</div>
	</div>
	<dialog id="instruction-dialog">
		<h1 class="b">วิธีการใช้กล่องค้นหาละเอียด</h1>
		<ol>
			<li>
				ใส่คำค้นหาที่ต้องการ
				<ul>
					<li>"คำค้นหา" สามารถมีกี่คำก็ได้ โดยแยกด้วยการเว้นวรรค เช่น "ไม่ไว้วางใจ ชลน่าน"</li>
					<li>หากต้องการใส่ช่องว่างลงในคำค้นหา ให้ใช้เครื่องหมาย _ เช่น "รังสิมันต์_โรม"</li>
					<li>
						หากต้องการบังคับให้มติที่ค้นหา<strong>มีคำนั้น</strong> ให้ใส่เครื่องหมาย + ข้างหน้าคำค้นหา
						เช่น "ไม่ไว้วางใจ +ประยุทธ์"
					</li>
					<li>
						หากต้องการบังคับให้มติที่ค้นหา<strong>ไม่มีคำนั้น</strong> ให้ใส่เครื่องหมาย - ข้างหน้าคำค้นหา
						เช่น "ไม่ไว้วางใจ -ประวิทย์"
					</li>
					<li>
						คำค้นหาที่ไม่มีเครื่องหมาย + หรือ - จะต้องปรากฏในมติอย่างน้อย 1 ครั้ง<strong
							>จากทุกคำ</strong
						>
						เช่น "ไม่ไว้วางใจ ชลน่าน"<br />จะต้องมีคำว่า "ไม่ไว้วางใจ" <em>หรือ</em> "ชลน่าน" (คำใดคำหนึ่ง
						หรือทั้งสองคำ) ปรากฏในมติ 1 ครั้ง
					</li>
				</ul>
			</li>
			<li>กด Mark — มติทุกอันที่ตรงตามเงื่อนไขจะมีสัญลักษณ์ <span class="hash" /> ปรากฏขึ้นมา</li>
			<li>ใช้กล่องค้นหาของเบราเซอร์ (<kbd>CTRL+F</kbd>) ค้นหาตัวอักษร <span class="hash" /></li>
		</ol>
		<form method="dialog">
			<button>ปิด</button>
		</form>
	</dialog>
	<main>
		{data.map(d => (
			<article itemscope itemtype="https://schema.org/Report">
				{d.title.length !== 0 && (
					<p itemprop="articleBody"><span class="custom-search-marker" role="none">#</span><Fragment set:html={d.title.join('<br>')} /></p>
				)}
				{d.score_summary_docs.length !== 0 && (
					<details>
						<summary>ใบประมวลผลการลงมติ (เช็คคนมา, ผลโหวตแต่ละเรื่อง)</summary>
						{d.score_summary_docs.map(m => typeof m === 'string' ? (
							<strong class="header">{m}</strong>
						) : (
							<a href={m[1]} target="_blank" rel="nofollow noopener noreferrer">
								{m[0]}
							</a>
						))}
					</details>
				)}
				<hr />
				{d.meeting_docs.length !== 0 && (
					<details>
						<summary>ข้อมูลการประชุม (บันทึกการประชุม)</summary>
						{d.meeting_docs.map(([t,l]) => (
							<a href={l} target="_blank" rel="nofollow noopener noreferrer">
								{t}
							</a>
						))}
					</details>
				)}
				<h1>
					<a
						itemprop="sameAs"
						href={`https://msbis.parliament.go.th/ewtadmin/ewt/parliament_report/main_warehouse_detail.php?mid=${d.id}`}
						target="_blank"
						rel="nofollow noopener noreferrer"
					>
						<span itemprop="reportNumber">{d.id}</span>
						{d.category !== 'หน้าหลัก' && (
							<>
								— <span itemprop="name">{d.category} {d.no}</span>
							</>
						)}
					</a>
				</h1>
			</article>
		))}
	</main>
	<button class="gotop" type="button" onclick="goTop()">⏫&#xFE0E;</button>
	<button class="gobottom" type="button" onclick="goBottom()">⏬&#xFE0E;</button>

	<script is:inline defer>
		const el_dialog = document.getElementById('instruction-dialog')
		const el_search_input = document.getElementById('search-input')
		const el_search_btn = document.getElementById('search-btn')

		const el_articles = Array.from(document.querySelectorAll('article'))
		let highlighted_el = []

		const goTop = () => {
			window.scrollTo(0, 0);
		};

		const goBottom = () => {
			window.scrollTo(0, document.body.scrollHeight);
		};

		const showInstruction = () => {
			el_dialog?.showModal()
		}

		const markArticles = (event) => {
			if(event.type === 'keydown' && event.key !== 'Enter') return
			let i, j;
			el_search_btn.innerText = 'Marking...';
			const tokenized_search_list = [
				...new Set(
					el_search_input
						.value
						.split(' ')
						.map((e) => e.replace(/_/g, ' ').replace(/\\ /g, '_').trim())
						.filter((e) => e)
				)
			];

			const some = [];
			const must = [];
			const no = [];

			for (i = 0; i < tokenized_search_list.length; i++) {
				const term = tokenized_search_list[i];
				if (term[0] === '+') {
					must.push(term.substring(1));
				} else if (term[0] === '-') {
					no.push(term.substring(1));
				} else {
					some.push(term);
				}
			}

			highlighted_el.forEach((e) => e.classList.remove('highlight'));
			highlighted_el = [];

			if (some.length + must.length + no.length !== 0) {
				article_loop: for (i = 0; i < el_articles.length; i++) {
					const content = el_articles[i].textContent;
					for (j = 0; j < no.length; j++) {
						if (content?.includes(no[j])) continue article_loop;
					}
					for (j = 0; j < must.length; j++) {
						if (!content?.includes(must[j])) continue article_loop;
					}
					for (j = 0; j < some.length; j++) {
						if (content?.includes(some[j])) break;
					}
					if (j === some.length) continue article_loop;

					el_articles[i].classList.add('highlight');
					highlighted_el.push(el_articles[i]);
				}
			}

			if (highlighted_el[0]) highlighted_el[0].scrollIntoView();

			window.queueMicrotask(() => {
				el_search_btn.innerText = 'Marked';
				setTimeout(() => (el_search_btn.innerText = 'Mark'), 500);
			});
		}

		el_search_input.addEventListener('keydown', markArticles)
		el_search_btn.addEventListener('click', markArticles)

		el_search_btn.innerText = 'Mark'
	</script>
</Layout>